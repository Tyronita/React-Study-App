{"ast":null,"code":"import _regeneratorRuntime from \"/home/gonk/code/CS/spam/evan/app/React-Study-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/gonk/code/CS/spam/evan/app/React-Study-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/gonk/code/CS/spam/evan/app/React-Study-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/gonk/code/CS/spam/evan/app/React-Study-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/gonk/code/CS/spam/evan/app/React-Study-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gonk/code/CS/spam/evan/app/React-Study-App/src/pages/TodoPage.jsx\";\nimport '../styles/Todo.css';\nimport React, { useState, useEffect } from 'react'; // import components for page\n\nimport Header from '../components/to-dos/Header';\nimport Tasks from '../components/to-dos/Tasks';\nimport AddTask from '../components/to-dos/AddTask'; // import database\n\nimport { db } from \"../firebase-config\";\nimport { collection, addDoc, getDocs, deleteDoc, doc } from 'firebase/firestore'; // import authentication\n\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../firebase-config\";\nexport default function TodoPage() {\n  // hooks fow which task should be shown\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showAddTask = _useState2[0],\n      setShowAddTask = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      tasks = _useState4[0],\n      setTasks = _useState4[1]; // searcher function to determine if task is important\n\n\n  var isImportant = function isImportant(task, id) {\n    if (task.id === id && task.important === true) {\n      return 'task_important';\n    } else {\n      return 'task';\n    }\n  }; // change importance of tasks\n\n\n  var changeImportance = function changeImportance(task, id) {\n    setTasks(tasks.map(function (task) {\n      return task.id === id ? _objectSpread({}, task, {\n        important: !task.important\n      }) : task;\n    }));\n    return isImportant(task, id);\n  };\n\n  var changeReminder = function changeReminder(task, id) {\n    setTasks(tasks.map(function (task) {\n      return task.id === id ? _objectSpread({}, task, {\n        reminder: !task.reminder\n      }) : task;\n    }));\n    return reminderOn(task, id);\n  };\n\n  var reminderOn = function reminderOn(task, id) {\n    if (task.id === id && task.reminder === true) {\n      return 'task_reminder';\n    } else {\n      return 'task';\n    }\n  }; // current user\n\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      user = _useState6[0],\n      setUser = _useState6[1];\n\n  onAuthStateChanged(auth, function (currentUser) {\n    setUser(currentUser);\n  }); // get to-dos from firebase\n\n  var PATH_NAME = \"to-dos/\";\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      todos = _useState8[0],\n      setTodos = _useState8[1];\n\n  var todosCollectionRef = collection(db, PATH_NAME); // add task - to database\n\n  var addTask = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(task) {\n      var userID, newTodo;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userID = user.uid;\n              newTodo = _objectSpread({\n                userID: userID\n              }, task);\n              _context.next = 4;\n              return addDoc(todosCollectionRef, newTodo);\n\n            case 4:\n              setTodos([].concat(_toConsumableArray(todos), [newTodo]));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function addTask(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // delete task with id\n\n\n  var deleteTask = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var todoDoc;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              todoDoc = doc(db, PATH_NAME, id);\n              _context2.next = 3;\n              return deleteDoc(todoDoc);\n\n            case 3:\n              setTodos(todos.filter(function (todo) {\n                return todo.id !== id;\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function deleteTask(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // (hook/function) called when page rendered\n\n\n  useEffect(function () {\n    var getTodos = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return getDocs(todosCollectionRef);\n\n              case 2:\n                data = _context3.sent;\n                // unpack data\n                data = data.docs.map(function (doc) {\n                  return _objectSpread({}, doc.data(), {\n                    id: doc.id\n                  });\n                }); // only select to-dos for authenticated user\n\n                data = data.filter(function (todo) {\n                  return todo.userID != user.uid;\n                });\n                setTodos(data);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function getTodos() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    getTodos();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    onAdd: function onAdd() {\n      return setShowAddTask(!showAddTask);\n    },\n    showAdd: showAddTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }), showAddTask && /*#__PURE__*/React.createElement(AddTask, {\n    onAdd: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }), todos.length >= 1 ? /*#__PURE__*/React.createElement(Tasks, {\n    tasks: todos,\n    onDelete: deleteTask,\n    onToggle: changeImportance,\n    onImportant: isImportant,\n    onReminder: reminderOn,\n    onChangeReminder: changeReminder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }) : 'No tasks available');\n}","map":{"version":3,"sources":["/home/gonk/code/CS/spam/evan/app/React-Study-App/src/pages/TodoPage.jsx"],"names":["React","useState","useEffect","Header","Tasks","AddTask","db","collection","addDoc","getDocs","deleteDoc","doc","onAuthStateChanged","auth","TodoPage","showAddTask","setShowAddTask","tasks","setTasks","isImportant","task","id","important","changeImportance","map","changeReminder","reminder","reminderOn","user","setUser","currentUser","PATH_NAME","todos","setTodos","todosCollectionRef","addTask","userID","uid","newTodo","deleteTask","todoDoc","filter","todo","getTodos","data","docs","length"],"mappings":"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","sourcesContent":["import '../styles/Todo.css';\nimport React, {useState, useEffect} from 'react';\n\n// import components for page\nimport Header from '../components/to-dos/Header';\nimport Tasks from '../components/to-dos/Tasks';\nimport AddTask from '../components/to-dos/AddTask';\n\n// import database\nimport { db } from \"../firebase-config\";\nimport { collection, addDoc, getDocs, deleteDoc, doc} from 'firebase/firestore';\n\n// import authentication\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"../firebase-config\";\n\nexport default function TodoPage() {\n\n  // hooks fow which task should be shown\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  // searcher function to determine if task is important\n  const isImportant = (task, id) =>{\n    if(task.id === id && task.important === true){\n      return('task_important');\n    }\n    else{\n      return('task');\n    }\n  }\n\n  // change importance of tasks\n  const changeImportance = (task, id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, important: !task.important} : task))\n    return(isImportant(task, id));\n  }\n\n  const changeReminder = (task, id) => {\n    setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n    return(reminderOn(task, id));\n  }\n\n  const reminderOn = (task, id) => {\n    if(task.id === id && task.reminder === true){\n      return('task_reminder');\n    }\n    else{\n      return('task');\n    }\n  }\n\n  // current user\n  const [user, setUser] = useState({});\n  onAuthStateChanged(auth, (currentUser) => {\n      setUser(currentUser);\n  });\n\n  // get to-dos from firebase\n  const PATH_NAME = \"to-dos/\";\n  const [todos, setTodos] = useState([]);\n  const todosCollectionRef = collection(db, PATH_NAME)\n\n  // add task - to database\n  const addTask = async (task) => {\n    const userID = user.uid\n    const newTodo = {userID, ...task}\n    await addDoc(todosCollectionRef, newTodo)\n    setTodos([...todos, newTodo])\n  }\n\n  // delete task with id\n  const deleteTask = async (id) => {\n    const todoDoc = doc(db, PATH_NAME, id)\n    await deleteDoc(todoDoc);\n    setTodos(todos.filter((todo) => todo.id !== id))\n  }\n\n  // (hook/function) called when page rendered\n  useEffect(() => {\n    const getTodos = async () => {\n      let data = await getDocs(todosCollectionRef);\n      // unpack data\n      data = data.docs.map((doc) => ({...doc.data(), id: doc.id}));\n      // only select to-dos for authenticated user\n      data = data.filter(todo => todo.userID != user.uid);\n      setTodos(data);\n    }\n\n    getTodos();\n  }, [])\n\n\n  return (\n    <main>\n\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n\n      {/* To-do list */}\n      {todos.length >= 1 ?\n        <Tasks tasks={todos} onDelete={deleteTask} onToggle={changeImportance}\n          onImportant={isImportant} onReminder={reminderOn}\n          onChangeReminder={changeReminder} /> : 'No tasks available' }\n    \n    </main>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}